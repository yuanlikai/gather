{"version":3,"sources":["webpack:///src/components/authority/roleList.vue","webpack:///./src/components/authority/roleList.vue?8f0d","webpack:///./src/components/authority/roleList.vue"],"names":["roleList","data","_this2","this","spinShow","roleTree","cheTree","formValidate","roleName","roleCode","remark","supplierExclusive","menuIds","data1","like","ruleValidate","validator","rule","value","callback","_this","length","Error","Axios","get","params","id","then","res","code","message","required","trigger","addAccount","total","loading","modal_loading","columns","type","width","align","title","minWidth","key","render","h","row","riqi","timeModified","maxWidth","on","click","handleReset","menu","menuTreeList","menuList","i","expand","checked","push","setTimeout","$refs","tree","getCheckedNodes","$Message","error","props","confirm","transfer","placement","offset","on-ok","post","Qs","stringify","ids","indices","getTreeList","success","methods","getTree","addRole","start","size","roleNameLike","content","totalElements","handleSubmit","name","validate","valid","resetFields","checkTree","getCheckedAndIndeterminateNodes","mounted","authority_roleList","_vm","_h","$createElement","_c","_self","staticClass","staticStyle","border","margin","_v","style","background","height","attrs","fix","_e","slot","margin-bottom","$event","show-header","margin-top","z-index","position","model","$$v","expression","_s","ref","rules","label-width","label","prop","maxlength","placeholder","$set","disabled","show-checkbox","on-check-change","long","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/29.0733149122fe9e76d633.js","sourcesContent":["<template>\r\n  <div class=\"content\">\r\n    <Card style=\"border:none;margin: 16px 0;\">\r\n      <div class=\"ivu-page-header-title\">角色管理</div>\r\n    </Card>\r\n    <!--<div style=\"padding: 0 20px 16px 20px\">-->\r\n      <!--<Card>-->\r\n        <!--<Row style=\"text-align: center;\">-->\r\n          <!--<Col style=\"padding: 16px 0;\" :xs=\"24\" :md=\"8\">-->\r\n            <!--已添加的角色-->\r\n            <!--<p style=\"font-size: 24px\">10 个角色</p>-->\r\n          <!--</Col>-->\r\n          <!--<Col style=\"padding: 16px 0;\" :xs=\"24\" :md=\"8\">-->\r\n            <!--剩余任务-->\r\n            <!--<p style=\"font-size: 24px\">3 个任务</p>-->\r\n          <!--</Col>-->\r\n          <!--<Col style=\"padding: 16px 0;\" :xs=\"24\" :md=\"8\">-->\r\n            <!--任务总耗时-->\r\n            <!--<p style=\"font-size: 24px\">120 个小时</p>-->\r\n          <!--</Col>-->\r\n        <!--</Row>-->\r\n      <!--</Card>-->\r\n    <!--</div>-->\r\n\r\n    <Card :style=\"{margin: '0 20px 20px 20px', background: '#fff',height:'auto'}\">\r\n      <Spin fix v-if=\"loading\"></Spin>\r\n      <p slot=\"title\">\r\n        基础列表\r\n      </p>\r\n      <Button @click=\"addRole() \"type=\"dashed\" style=\"width: 100%;margin-bottom: 16px;\">添加</Button>\r\n      <Table :show-header=\"true\" :columns=\"columns\" :data=\"data\"></Table>\r\n      <div style=\"width: 100%;height: 2px;background: #ffffff;margin-top: -1px;z-index: 3;position: relative\"></div>\r\n    </Card>\r\n    <Modal v-model=\"addAccount\" width=\"300\">\r\n      <p slot=\"header\">\r\n        <Icon type=\"ios-information-circle\"></Icon>\r\n        <span>{{id===''?'添加':'修改'}}角色</span>\r\n      </p>\r\n      <div>\r\n        <Spin size=\"large\" fix v-if=\"spinShow\"></Spin>\r\n        <Form ref=\"formValidate\" :model=\"formValidate\" :rules=\"ruleValidate\" :label-width=\"70\">\r\n          <FormItem label=\"角色名称\" prop=\"roleName\">\r\n            <Input :maxlength=\"10\" v-model=\"formValidate.roleName\" placeholder=\"请输入角色名称\"></Input>\r\n          </FormItem>\r\n          <FormItem label=\"角色编号\" prop=\"roleCode\">\r\n            <Input :disabled=\"id!==''?true:false\" :maxlength=\"10\" v-model=\"formValidate.roleCode\"\r\n                   placeholder=\"请输入角色编号\"></Input>\r\n          </FormItem>\r\n          <FormItem label=\"角色说明\" prop=\"remark\">\r\n            <Input type=\"textarea\" :maxlength=\"50\" v-model=\"formValidate.remark\" placeholder=\"请输入角色说明\"></Input>\r\n          </FormItem>\r\n          <FormItem :label-width=\"100\" label=\"供应商是否专属\" prop=\"supplierExclusive\">\r\n            <i-switch :disabled=\"id!==''?true:false\" v-model=\"formValidate.supplierExclusive\">\r\n              <span slot=\"open\">是</span>\r\n              <span slot=\"close\">否</span>\r\n            </i-switch>\r\n          </FormItem>\r\n          <FormItem label=\"关联菜单\" prop=\"menuIds\">\r\n            <Card>\r\n              <Tree @on-check-change=\"checkTree\" ref=\"tree\" :data=\"roleTree\" show-checkbox></Tree>\r\n            </Card>\r\n          </FormItem>\r\n        </Form>\r\n      </div>\r\n      <div slot=\"footer\">\r\n        <Button type=\"success\" size=\"large\" long :loading=\"modal_loading\" @click=\"handleSubmit('formValidate')\">\r\n          {{id===''?'添加':'修改'}}\r\n        </Button>\r\n      </div>\r\n    </Modal>\r\n  </div>\r\n</template>\r\n<script>\r\n  export default {\r\n    data() {\r\n      // 角色名称验证\r\n      const roleName = (rule, value, callback) => {\r\n        const _this = this;\r\n        if (value.length < 1) {\r\n          callback(new Error('请选择角色'))\r\n        } else {\r\n          _this.Axios.get('/Manage/Role/checkRoleName', {\r\n            params: {\r\n              id: _this.id !== '' ? _this.id : '',\r\n              roleName: value //角色名\r\n            }\r\n          }).then(res => {\r\n            if (res.data.code === 0) {\r\n              callback()\r\n            } else {\r\n              callback(new Error(res.data.message))\r\n            }\r\n          })\r\n        }\r\n      };\r\n      // 角色编号验证\r\n      const roleCode = (rule, value, callback) => {\r\n        const _this = this;\r\n        if (value.length < 1) {\r\n          callback(new Error('请选择角色'))\r\n        } else {\r\n          _this.Axios.get('/Manage/Role/checkRoleCode', {\r\n            params: {\r\n              id: _this.id !== '' ? _this.id : '',\r\n              roleCode: value //角色名\r\n            }\r\n          }).then(res => {\r\n            if (res.data.code === 0) {\r\n              callback()\r\n            } else {\r\n              callback(new Error(res.data.message))\r\n            }\r\n          })\r\n        }\r\n      };\r\n      // 角色菜单验证\r\n      const roleMenu = (rule, value, callback) => {\r\n        if (this.cheTree.length < 1) {\r\n          callback(new Error('请关联菜单'))\r\n        } else {\r\n          callback()\r\n        }\r\n      };\r\n      return {\r\n        spinShow: false,\r\n        roleTree: [],\r\n        cheTree: [],\r\n        formValidate: {\r\n          roleName: '',       //角色名称，\r\n          roleCode: '',        //角色编号，\r\n          remark: '',           //角色说明\r\n          supplierExclusive: false,  //是否供应商专属,\r\n          menuIds: false,\r\n        },\r\n        data1: [],\r\n        like: '',\r\n        ruleValidate: {\r\n          roleName: [\r\n            {validator: roleName, required: true, trigger: 'blur'}\r\n          ],\r\n          roleCode: [\r\n            {validator: roleCode, required: true, trigger: 'blur'}\r\n          ],\r\n          menuIds: [\r\n            {validator: roleMenu, required: true, trigger: 'change'}\r\n          ],\r\n        },\r\n        id: '',\r\n        addAccount: false,\r\n        total: 0,\r\n        loading: true,\r\n        modal_loading: false,\r\n        columns: [\r\n          {\r\n            type: 'index',\r\n            width: 50,\r\n            align: 'center'\r\n          },\r\n          {\r\n            title: '角色名称',\r\n            minWidth: 88,\r\n            key: 'roleName',\r\n            align: 'center'\r\n          },\r\n          {\r\n            title: '角色备注',\r\n            minWidth: 88,\r\n            key: 'remark',\r\n            align: 'center'\r\n          },\r\n          {\r\n            title: '供应商是否专属',\r\n            minWidth: 88,\r\n            key: 'status',\r\n            align: 'center',\r\n            render: (h, params) => {\r\n              return h('p', params.row.supplierExclusive === true ? '是' : '否')\r\n            }\r\n          },\r\n          {\r\n            title: '最后修改时间',\r\n            minWidth: 88,\r\n            key: 'timeModified',\r\n            align: 'center',\r\n            render: (h, params) => {\r\n              return h('p', this.riqi(params.row.timeModified))\r\n            }\r\n          },\r\n          {\r\n            title: '操作',\r\n            align: 'center',\r\n            minWidth: 100,\r\n            maxWidth: 180,\r\n            render: (h, params) => {\r\n              return h('div', [\r\n                h('a', {\r\n                  on: {\r\n                    click: () => {\r\n                      const _this = this;\r\n                      _this.spinShow = true;\r\n                      _this.addAccount = true;\r\n                      _this.id = params.row.id;\r\n                      _this.handleReset('formValidate');\r\n                      _this.formValidate.remark = params.row.remark;\r\n                      _this.formValidate.roleName = params.row.roleName;\r\n                      _this.formValidate.roleCode = params.row.roleCode;\r\n                      _this.formValidate.supplierExclusive = params.row.supplierExclusive;\r\n                      _this.Axios.get('/Manage/Role/getRole', {\r\n                        params: {\r\n                          id: params.row.id\r\n                        }\r\n                      }).then(res => {\r\n                        if (res.data.code === 0) {\r\n                          let menu = res.data.data.menuTreeList,\r\n                            menuList = [];\r\n                          for (let i = 0; i < menu.length; i++) {\r\n                            menu[i].expand = menu[i].checked === true ? true : false;\r\n                            menu[i].checked = false;\r\n                            menuList.push(menu[i])\r\n                          }\r\n                          _this.roleTree = menuList;\r\n                          setTimeout(() => {\r\n                            _this.cheTree = _this.$refs.tree.getCheckedNodes()\r\n                          }, 1)\r\n                        } else {\r\n                          _this.$Message.error(res.data.message)\r\n                        }\r\n                        _this.spinShow = false;\r\n                      })\r\n                    }\r\n                  }\r\n                },'编辑'),\r\n                h('Divider',{\r\n                  props:{\r\n                    type:'vertical'\r\n                  }\r\n                }),\r\n                h('Poptip', {\r\n                  props: {\r\n                    confirm: true,\r\n                    transfer: true,\r\n                    placement: \"top-end\",\r\n                    offset: 13,\r\n                    title: '确定删除该角色？',\r\n                  },\r\n                  on: {\r\n                    'on-ok': () => {\r\n                      const _this = this;\r\n                      _this.Axios.post('/Manage/Role/deleteRole', _this.Qs.stringify({\r\n                        ids: [params.row.id]\r\n                      }, {indices: false})).then(res => {\r\n                        if (res.data.code === 0) {\r\n                          _this.getTreeList();\r\n                          _this.$Message.success('删除成功')\r\n                        } else {\r\n                          _this.$Message.error(res.data.message)\r\n                        }\r\n                      })\r\n                    }\r\n                  }\r\n                }, [\r\n                  h('a','删除')\r\n                ])\r\n              ])\r\n            }\r\n          }\r\n        ],\r\n        data: []\r\n      }\r\n    },\r\n    methods: {\r\n      // 获取菜单树形结构\r\n      getTree() {\r\n        const _this = this;\r\n        _this.Axios.get('/Manage/Menu/tree').then(res => {\r\n          _this.roleTree = res.data.data;\r\n        })\r\n      },\r\n\r\n      // 新增角色\r\n      addRole() {\r\n        this.getTree();\r\n        this.id = '';\r\n        this.handleReset('formValidate')\r\n        this.addAccount = true\r\n      },\r\n\r\n      // 获取角色列表\r\n      getTreeList() {\r\n        const _this = this;\r\n        _this.loading = true;\r\n        _this.Axios.get('/Manage/Role/pageList', {\r\n          params: {\r\n            start: _this.start,\r\n            size: 14,\r\n            roleNameLike: '',\r\n          }\r\n        }).then(res => {\r\n          if (res.data.code === 0) {\r\n            _this.data = res.data.data.content\r\n          } else {\r\n            _this.$Message.error(res.data.message)\r\n          }\r\n          _this.loading = false;\r\n          _this.total = res.data.data.totalElements;\r\n        })\r\n      },\r\n\r\n      // 添加角色\r\n      handleSubmit(name) {\r\n        const _this = this;\r\n        _this.$refs[name].validate((valid) => {\r\n          if (valid) {\r\n            _this.modal_loading = true;\r\n            const menuIds = [];\r\n            for (let i in _this.cheTree) {\r\n              menuIds.push(_this.cheTree[i].id)\r\n            }\r\n            if (_this.id === '') {\r\n              _this.Axios.post('/Manage/Role/addRole', _this.Qs.stringify({\r\n                roleName: _this.formValidate.roleName,        //角色名称\r\n                roleCode: _this.formValidate.roleCode,        //角色编号\r\n                remark: _this.formValidate.remark,            //备注\r\n                menuIds: menuIds,             //菜单id集合\r\n                supplierExclusive: _this.formValidate.supplierExclusive,   //是否供应商专属 true为是 需要传\r\n              }, {indices: false})).then(res => {\r\n                if (res.data.code === 0) {\r\n                  _this.addAccount = false;\r\n                  _this.getTreeList();\r\n                  _this.$Message.success('添加成功')\r\n                } else {\r\n                  _this.$Message.error(res.data.message)\r\n                }\r\n                _this.modal_loading = false;\r\n              })\r\n            } else {\r\n              _this.Axios.post('/Manage/Role/updateRole', _this.Qs.stringify({\r\n                id: _this.id,\r\n                roleName: _this.formValidate.roleName,        //角色名称\r\n                roleCode: _this.formValidate.roleCode,        //角色编号\r\n                remark: _this.formValidate.remark,            //备注\r\n                menuIds: menuIds,                             //菜单id集合\r\n                supplierExclusive: _this.formValidate.supplierExclusive,   //是否供应商专属 true为是 需要传\r\n              }, {indices: false})).then(res => {\r\n                if (res.data.code === 0) {\r\n                  _this.addAccount = false;\r\n                  _this.getTreeList();\r\n                  _this.$Message.success('修改成功')\r\n                } else {\r\n                  _this.$Message.error(res.data.message)\r\n                }\r\n                _this.modal_loading = false;\r\n              })\r\n            }\r\n          } else {\r\n            _this.$Message.error('有必填项未填写!');\r\n          }\r\n        })\r\n      },\r\n      handleReset(name) {\r\n        this.$refs[name].resetFields();\r\n      },\r\n\r\n      // 获取选中半选中树形结构\r\n      checkTree(i) {\r\n        this.cheTree = this.$refs.tree.getCheckedAndIndeterminateNodes();\r\n      },\r\n\r\n    },\r\n    mounted() {\r\n      this.getTreeList();\r\n    }\r\n  }\r\n</script>\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped lang=\"less\">\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/authority/roleList.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"content\"},[_c('Card',{staticStyle:{\"border\":\"none\",\"margin\":\"16px 0\"}},[_c('div',{staticClass:\"ivu-page-header-title\"},[_vm._v(\"角色管理\")])]),_vm._v(\" \"),_c('Card',{style:({margin: '0 20px 20px 20px', background: '#fff',height:'auto'})},[(_vm.loading)?_c('Spin',{attrs:{\"fix\":\"\"}}):_vm._e(),_vm._v(\" \"),_c('p',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(\"\\n      基础列表\\n    \")]),_vm._v(\" \"),_c('Button',{staticStyle:{\"width\":\"100%\",\"margin-bottom\":\"16px\"},attrs:{\"type\":\"dashed\"},on:{\"click\":function($event){_vm.addRole()}}},[_vm._v(\"添加\")]),_vm._v(\" \"),_c('Table',{attrs:{\"show-header\":true,\"columns\":_vm.columns,\"data\":_vm.data}}),_vm._v(\" \"),_c('div',{staticStyle:{\"width\":\"100%\",\"height\":\"2px\",\"background\":\"#ffffff\",\"margin-top\":\"-1px\",\"z-index\":\"3\",\"position\":\"relative\"}})],1),_vm._v(\" \"),_c('Modal',{attrs:{\"width\":\"300\"},model:{value:(_vm.addAccount),callback:function ($$v) {_vm.addAccount=$$v},expression:\"addAccount\"}},[_c('p',{attrs:{\"slot\":\"header\"},slot:\"header\"},[_c('Icon',{attrs:{\"type\":\"ios-information-circle\"}}),_vm._v(\" \"),_c('span',[_vm._v(_vm._s(_vm.id===''?'添加':'修改')+\"角色\")])],1),_vm._v(\" \"),_c('div',[(_vm.spinShow)?_c('Spin',{attrs:{\"size\":\"large\",\"fix\":\"\"}}):_vm._e(),_vm._v(\" \"),_c('Form',{ref:\"formValidate\",attrs:{\"model\":_vm.formValidate,\"rules\":_vm.ruleValidate,\"label-width\":70}},[_c('FormItem',{attrs:{\"label\":\"角色名称\",\"prop\":\"roleName\"}},[_c('Input',{attrs:{\"maxlength\":10,\"placeholder\":\"请输入角色名称\"},model:{value:(_vm.formValidate.roleName),callback:function ($$v) {_vm.$set(_vm.formValidate, \"roleName\", $$v)},expression:\"formValidate.roleName\"}})],1),_vm._v(\" \"),_c('FormItem',{attrs:{\"label\":\"角色编号\",\"prop\":\"roleCode\"}},[_c('Input',{attrs:{\"disabled\":_vm.id!==''?true:false,\"maxlength\":10,\"placeholder\":\"请输入角色编号\"},model:{value:(_vm.formValidate.roleCode),callback:function ($$v) {_vm.$set(_vm.formValidate, \"roleCode\", $$v)},expression:\"formValidate.roleCode\"}})],1),_vm._v(\" \"),_c('FormItem',{attrs:{\"label\":\"角色说明\",\"prop\":\"remark\"}},[_c('Input',{attrs:{\"type\":\"textarea\",\"maxlength\":50,\"placeholder\":\"请输入角色说明\"},model:{value:(_vm.formValidate.remark),callback:function ($$v) {_vm.$set(_vm.formValidate, \"remark\", $$v)},expression:\"formValidate.remark\"}})],1),_vm._v(\" \"),_c('FormItem',{attrs:{\"label-width\":100,\"label\":\"供应商是否专属\",\"prop\":\"supplierExclusive\"}},[_c('i-switch',{attrs:{\"disabled\":_vm.id!==''?true:false},model:{value:(_vm.formValidate.supplierExclusive),callback:function ($$v) {_vm.$set(_vm.formValidate, \"supplierExclusive\", $$v)},expression:\"formValidate.supplierExclusive\"}},[_c('span',{attrs:{\"slot\":\"open\"},slot:\"open\"},[_vm._v(\"是\")]),_vm._v(\" \"),_c('span',{attrs:{\"slot\":\"close\"},slot:\"close\"},[_vm._v(\"否\")])])],1),_vm._v(\" \"),_c('FormItem',{attrs:{\"label\":\"关联菜单\",\"prop\":\"menuIds\"}},[_c('Card',[_c('Tree',{ref:\"tree\",attrs:{\"data\":_vm.roleTree,\"show-checkbox\":\"\"},on:{\"on-check-change\":_vm.checkTree}})],1)],1)],1)],1),_vm._v(\" \"),_c('div',{attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('Button',{attrs:{\"type\":\"success\",\"size\":\"large\",\"long\":\"\",\"loading\":_vm.modal_loading},on:{\"click\":function($event){_vm.handleSubmit('formValidate')}}},[_vm._v(\"\\n        \"+_vm._s(_vm.id===''?'添加':'修改')+\"\\n      \")])],1)])],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-15c70c50\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/authority/roleList.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-15c70c50\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!less-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./roleList.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./roleList.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./roleList.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-15c70c50\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./roleList.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-15c70c50\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/authority/roleList.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}